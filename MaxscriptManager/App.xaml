<Application x:Class="MaxscriptManager.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vm="clr-namespace:MaxscriptManager.ViewModel"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:local="clr-namespace:MaxscriptManager.Control"
             xmlns:src="clr-namespace:MaxscriptManager.Src"
             xmlns:sgz="clr-namespace:SugzTools.Controls;assembly=SugzTools"
             xmlns:c="clr-namespace:SugzTools.Converters;assembly=SugzTools"
             xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
			 xmlns:ignore="http://www.galasoft.ch/ignore"
             StartupUri="MView.xaml"
             mc:Ignorable="d ignore">

    <Application.Resources>

        

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/SugzTools;component/Themes/MaxStyles.xaml" />
                <ResourceDictionary Source="/SugzTools;component/Resources/Colors.xaml" />
                <ResourceDictionary Source="/SugzTools;component/Themes/FadeInOutScrollViewerStyle.xaml" />
                <!--<ResourceDictionary Source="MaxscriptManager;component/Themes/FullRowTreeview.xaml" />-->
            </ResourceDictionary.MergedDictionaries>

            <src:LeftMarginMultiplierConverter Length="13" x:Key="lengthConverter" />

            <!-- Global View Model Locator -->
            <vm:ViewModelLocator x:Key="Locator" d:IsDataSource="True" />

            <!-- Dark Panel Color -->
            <SolidColorBrush x:Key="DarkPanelColor" Color="#FF282828" />

            
            <!-- GridSplitterTemplate -->
            <Style x:Key="GridSplitterStyle" TargetType="{x:Type GridSplitter}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Opacity" Value="0" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="Width" Value="6" />
                <Setter Property="Margin" Value="0,0,-3,0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridSplitter}">
                            <Border x:Name="Bd" Background="{TemplateBinding Background}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <!-- Toolbar Base Button Style -->
            <Style x:Key="ToolbarBaseButtonStyle" TargetType="{x:Type Control}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="{x:Null}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Height" Value="40" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="BorderBrush" Value="{StaticResource MaxButtonBorder}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Toolbar Button Style -->
            <Style x:Key="ToolbarButtonStyle" TargetType="{x:Type sgz:SgzButton}" BasedOn="{StaticResource ToolbarBaseButtonStyle}">
                <Setter Property="PressedBrush" Value="{StaticResource MaxBlueMouseOver}" />
                <Setter Property="HoverBrush" Value="{StaticResource MaxButtonMouseOver}" />
                <Setter Property="CornerRadius" Value="0" />
                <Style.Triggers>
                    <Trigger Property="IsPressed" Value="true">
                        <Setter Property="Foreground" Value="White" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Toolbar CheckButton Style -->
            <Style x:Key="ToolbarCheckButtonStyle" TargetType="{x:Type sgz:SgzFlatCheckButton}" BasedOn="{StaticResource ToolbarBaseButtonStyle}">
                <Setter Property="CheckedBrush" Value="Transparent" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Style.Triggers>
                    <Trigger Property="IsPressed" Value="true">
                        <Setter Property="Foreground" Value="White" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Open Options CheckButton -->
            <Style x:Key="OptionButtonStyle" TargetType="{x:Type sgz:SgzCheckButton}" BasedOn="{StaticResource ToolbarBaseButtonStyle}">
                <Setter Property="PressedBrush" Value="{StaticResource MaxBlueMouseOver}" />
                <Setter Property="HoverBrush" Value="{StaticResource MaxButtonMouseOver}" />
                <Setter Property="CornerRadius" Value="0" />
                <Style.Triggers>
                    <Trigger Property="IsPressed" Value="true">
                        <Setter Property="Foreground" Value="White" />
                    </Trigger>
                </Style.Triggers>
            </Style>


            <!-- Validate Path Textbox -->
            <Style x:Key="ValidatePathTextBoxStyle" TargetType="{x:Type sgz:SgzTextBox}">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Padding" Value="2,0" />
                <Setter Property="Margin" Value="5,4,0,4" />
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}" />
                    </Trigger>
                </Style.Triggers>
            </Style>


            <!-- Status panel TextBlock -->
            <Style x:Key="StatusPanelTextBlockStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="{StaticResource MaxText}" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="0,0,10,0" />
                <Setter Property="MinWidth" Value="175" />
            </Style>


            <!--FlowDocument Styles-->
            <Style x:Key="FlowDocumentStyle" TargetType="{x:Type FlowDocument}">
                <Setter Property="PagePadding" Value="5,10,5,5" />
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Cursor" Value="Arrow" />
                <Setter Property="TextAlignment" Value="Left" />
                <Setter Property="Foreground" Value="{DynamicResource MaxFocusBorder}" />
            </Style>

            <Style x:Key="ParagraphStyle" TargetType="{x:Type Paragraph}">
                <Setter Property="Block.Margin" Value="0" />
            </Style>

            <Style x:Key="ListStyle" TargetType="{x:Type List}">
                <Setter Property="Block.Padding" Value="20,0,0,0" />
            </Style>

            <Style x:Key="FolderChildrenRunStyle" TargetType="{x:Type Run}">
                <Setter Property="Foreground" Value="{StaticResource MaxText}" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="White" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="EmailRunStyle" TargetType="{x:Type Run}">
                <Setter Property="FontStyle" Value="Italic" />
                <Setter Property="TextDecorations" Value="Underline" />
                <Setter Property="Cursor" Value="Hand" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="White" />
                    </Trigger>
                </Style.Triggers>

            </Style>
            

            <!-- TreeViews CheckButton Style -->
            <Style x:Key="TreeViewsCheckButtonStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Height" Value="22" />
                <Setter Property="Background" Value="{DynamicResource MaxButtonBorder}" />
                <Setter Property="Foreground" Value="{DynamicResource MaxText}" />
                <Setter Property="FontFamily" Value="Segoe UI Semibold" />
                <Setter Property="DockPanel.Dock" Value="Top" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <DockPanel Background="{TemplateBinding Background}">
                                <Path x:Name="PART_Arrow"
                                      DockPanel.Dock="Left"
                                      Data="{StaticResource RolloutCollapsedGeo}"
                                      Style="{StaticResource NoStretchIcon}"
                                      Fill="{StaticResource MaxRolloutArrow}"
                                      VerticalAlignment="Center"
                                      Margin="7,0,0,0"
                                      Width="6" />

                                <ContentPresenter x:Name="PART_Content"
                                                  DockPanel.Dock="Left"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Center"
                                                  Margin="8,0,0,0"
                                                  TextOptions.TextFormattingMode="Display" />
                            </DockPanel>

                            <ControlTemplate.Triggers>
                                <!-- Expand State -->
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="PART_Arrow" Property="Data" Value="{StaticResource RolloutExpandedGeo}" />
                                </Trigger>

                                <!-- Mouse Triggers -->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="PART_Arrow" Property="Fill" Value="{StaticResource MaxTitle}" />
                                </Trigger>

                                <Trigger Property="HorizontalAlignment" Value="Right">
                                    <Setter TargetName="PART_Arrow" Property="DockPanel.Dock" Value="Right" />
                                    <Setter TargetName="PART_Arrow" Property="Margin" Value="0,0,6,0" />
                                    <Setter TargetName="PART_Content" Property="HorizontalAlignment" Value="left" />
                                </Trigger>

                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
           
            <!-- TreeViewItem Style -->
            <HierarchicalDataTemplate x:Key="TvDataTemplate" ItemsSource="{Binding Children}">
                <TextBlock Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}"
                           Text="{Binding Text}"
                           FontFamily="Segoe UI" />
            </HierarchicalDataTemplate>

            <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid Width="15"
                                  Height="13"
                                  Background="Transparent">
                                <Path x:Name="ExpandPath"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Center"
                                      Margin="1,1,1,1"
                                      Fill="{DynamicResource MaxCaretBrush}"
                                      Data="M 4 0 L 8 4 L 4 8 Z" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="ExpandPath" Property="Data" Value="M 0 4 L 8 4 L 4 8 Z" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="TreeViewItemFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border>
                                <Rectangle Margin="0,0,0,0"
                                           StrokeThickness="5"
                                           Stroke="Black"
                                           StrokeDashArray="1 2"
                                           Opacity="0" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="FullRowTreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                            <StackPanel>
                                <Border Name="Bd"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Padding="{TemplateBinding Padding}"
                                        Height="22">
                                    <Grid Margin="{Binding Converter={StaticResource lengthConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="19" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <ToggleButton x:Name="Expander"
                                                      Style="{StaticResource ExpandCollapseToggleStyle}"
                                                      IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                                      ClickMode="Press" />

                                        <ContentPresenter x:Name="PART_Header"
                                                          Grid.Column="1"
                                                          ContentSource="Header"
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    </Grid>
                                </Border>
                                <ItemsPresenter x:Name="ItemsHost" />
                            </StackPanel>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="false">
                                    <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                                </Trigger>

                                <Trigger Property="HasItems" Value="false">
                                    <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="HasHeader" Value="false" />
                                        <Condition Property="Width" Value="Auto" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="HasHeader" Value="false" />
                                        <Condition Property="Height" Value="Auto" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                                </MultiTrigger>

                                <Trigger Property="IsSelected" Value="true">
                                    <Setter TargetName="Bd" Property="Background" Value="{DynamicResource MaxBlueMouseOver}" />
                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="true" />
                                        <Condition Property="IsSelectionActive" Value="false" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Bd" Property="Background" Value="{DynamicResource MaxButton}" />
                                </MultiTrigger>

                                <Trigger Property="IsEnabled"
                                         Value="false">
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ActivableFullRowTreeViewItemStyle" TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource FullRowTreeViewItemStyle}">
                <Setter Property="IsSelected" Value="{Binding IsActive, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </Style>
    
            <!-- TreeView Style -->
            <Style x:Key="FullRowTreeViewStyle" TargetType="{x:Type TreeView}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="{x:Null}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Foreground" Value="{DynamicResource MaxText}" />
                <Setter Property="DockPanel.Dock" Value="Top" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Margin" Value="0"/>
                <Setter Property="ItemTemplate" Value="{StaticResource TvDataTemplate}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeView}">
                            <Border x:Name="Bd"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true">
                                <ScrollViewer x:Name="TV_ScrollViewer"
                                              CanContentScroll="false"
                                              Focusable="false"
                                              HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                              Template="{StaticResource FadeInOutScrollViewerTemplate}">
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="Bd" Property="Background"
                                            Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                </Trigger>

                                <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                                    <Setter TargetName="TV_ScrollViewer" Property="CanContentScroll" Value="true" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            
            <!-- TextEditor -->
            <Style x:Key="TextEditorStyle" TargetType="{x:Type avalonedit:TextEditor}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="FontFamily" Value="Consolas" />
                <Setter Property="FontSize" Value="10pt" />
                <Setter Property="Document" Value="{Binding Code.Document, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}"/>
                <Setter Property="IsModified" Value="{Binding Code.IsModified, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}"/>
                <Setter Property="ShowLineNumbers" Value="True" />
                <Setter Property="Foreground" Value="#FFD2D2D2" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            </Style>
            
            <Style x:Key="MvvmTextEditorStyle" TargetType="{x:Type local:MvvmTextEditor}" BasedOn="{StaticResource TextEditorStyle}">
                <Setter Property="TextDocument" Value="{Binding Description.Document, Source={StaticResource Locator}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Style>


        </ResourceDictionary>
    </Application.Resources>

</Application>
